{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.jsx"],"names":["TodoItem","todo","deleteTodo","changeComplete","className","classNames","completed","type","checked","onChange","id","title","onClick","TodoList","items","allComplete","clearCompleted","useState","newArr","setNewArr","all","active","filterAll","setFilterAll","todosFilter","condition","filter","useEffect","htmlFor","map","x","length","href","selected","find","App","newTodo","setNewTodo","listTodo","setListTodo","onSubmit","event","preventDefault","task","Date","placeholder","value","target","required","todoId","handle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0563c399.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodoItem = ({ todo, deleteTodo, changeComplete }) => (\n  <li\n    key={todo.id}\n    className={classNames({ completed: todo.completed })}\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={todo.completed}\n        onChange={() => changeComplete(todo.id)}\n      />\n      <label>{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(todo.id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf().isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeComplete: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({\n  items,\n  deleteTodo,\n  changeComplete,\n  allComplete,\n  clearCompleted,\n}) => {\n  const [newArr, setNewArr] = useState(items);\n  const [filterAll, setFilterAll] = useState({\n    all: true,\n    active: false,\n    completed: false,\n  });\n\n  const todosFilter = (condition) => {\n    switch (condition) {\n      case 'all':\n        return setNewArr(items);\n      case 'active':\n        return setNewArr([...items].filter(\n          todo => todo.completed !== true,\n        ));\n      case 'completed':\n        return setNewArr([...items].filter(\n          todo => todo.completed === true,\n        ));\n      default:\n        return 0;\n    }\n  };\n\n  useEffect(() => {\n    setNewArr(items);\n  }, [items]);\n\n  return (\n    <>\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={() => allComplete()}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          {newArr.map(todo => (\n            <TodoItem\n              todo={todo}\n              deleteTodo={deleteTodo}\n              changeComplete={changeComplete}\n            />\n          ))}\n        </ul>\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {[...items].filter(x => x.completed === false).length}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              href=\"#/\"\n              className={classNames({ selected: filterAll.all })}\n              onClick={() => {\n                todosFilter('all');\n                setFilterAll({\n                  all: true,\n                  active: false,\n                  completed: true,\n                });\n              }}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/active\"\n              className={classNames({ selected: filterAll.active })}\n              onClick={() => {\n                todosFilter('active');\n                setFilterAll({\n                  all: false,\n                  active: true,\n                  completed: false,\n                });\n              }}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/completed\"\n              className={classNames({ selected: filterAll.completed })}\n              onClick={() => {\n                todosFilter('completed');\n                setFilterAll({\n                  all: false,\n                  active: false,\n                  completed: true,\n                });\n              }}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        {[...items].find(x => x.completed) && (\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={() => clearCompleted()}\n          >\n            Clear completed\n          </button>\n        )}\n      </footer>\n    </>\n  );\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf().isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeComplete: PropTypes.func.isRequired,\n  allComplete: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState();\n  const [listTodo, setListTodo] = useState([]);\n\n  const handleEvent = (event) => {\n    event.preventDefault();\n\n    const task = {\n      id: (+new Date()),\n      title: newTodo,\n      completed: false,\n    };\n\n    setListTodo([...listTodo, task]);\n    setNewTodo('');\n  };\n\n  const deleteTodo = (todoId) => {\n    const newArr = listTodo.filter(\n      todo => todo.id !== todoId,\n    );\n\n    setListTodo(newArr);\n  };\n\n  const changeComplete = (todoId) => {\n    setListTodo(\n      listTodo.map((todo) => {\n        if (todo.id === todoId) {\n          const handle = todo.completed;\n\n          return {\n            ...todo,\n            completed: !handle,\n          };\n        }\n\n        return todo;\n      }),\n    );\n  };\n\n  const allComplete = () => {\n    if (listTodo.find(todo => todo.completed !== true)) {\n      const newArr = listTodo.map(todo => (\n        {\n          ...todo,\n          completed: true,\n        }\n      ));\n\n      return setListTodo(newArr);\n    }\n\n    return setListTodo(\n      listTodo.map((todo) => {\n        const handle = todo.completed;\n\n        return {\n          ...todo,\n          completed: !handle,\n        };\n      }),\n    );\n  };\n\n  const clearCompleted = () => {\n    setListTodo(\n      listTodo.filter(\n        todo => todo.completed !== true,\n      ),\n    );\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleEvent}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onChange={event => setNewTodo(event.target.value)}\n            required\n          />\n        </form>\n      </header>\n\n      {listTodo.length > 0 && (\n        <TodoList\n          items={listTodo}\n          deleteTodo={deleteTodo}\n          changeComplete={changeComplete}\n          allComplete={allComplete}\n          clearCompleted={clearCompleted}\n        />\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}